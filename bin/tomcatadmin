#!/bin/bash

usage() {
    cat <<EOF

A wrapper around Tomcats manager webapp, see http://http://tomcat.apache.org/tomcat-7.0-doc/manager-howto.html#Supported_Manager_Commands 
Usage $0 [-h --host] command [parameter...]

Where command is one of:
  list                  - List all webapps
  serverinfo            - Lists information about Tomcat, OS and the JVM
  resources [type=XXX]  - Lists global JNDI resources
  status path           - returns -1 for not running, or if running, the number of sessions
  start path            - Starts the webapp on context path path
  stop path             - Stops  the webapp on context path path
  reload path           - Reloads the webapp on context path path
  deploy args           - Deploys a webapp, exampels of args is path=/foo war=file:/tmp/foo.war, see the link above
  undeploy path         - Undeploys the webapp at the given path

Flags:

-h host                Use host instead of localhost
-p port                Use port instead of 8080
-u user[:password]     Use user insterad of admin:admin
 
EOF
}

die() {
    echo $1>&2
    exit 2
}

doCurl() {
    $(curl -s -u $user $url$*)
    status=$?
    case $status in 
	0)
	    ;;

	2)
	    echo "Failed to initialize."
	    ;;
	3)
	    echo "URL malformed. The syntax was not correct."
	    ;;
	4)
	    echo "A feature or option that was needed to perform the desired request was not enabled or was explicitly disabled at build-time. To make curl able to do this, you probably need another build of libcurl!"
	    ;;
	5)
	    echo "Couldn't resolve proxy. The given proxy host could not be resolved."
	    ;;
	6)
	    echo "Couldn't resolve host. The given remote host was not resolved."
	    ;;
	7)
	    echo "Failed to connect to host."
	    ;;
	18)
	    echo "Partial file. Only a part of the file was transferred."
	    ;;
	22)
	    echo "HTTP page not retrieved. The requested url was not found or returned another error with the HTTP error code being 400 or above. This return  code  only  appears  if  -f, --fail is used."
	    ;;
	23)
	    echo "Write error. Curl couldn't write data to a local filesystem or similar."
	    ;;
	26)
	    echo "Read error. Various reading problems."
	    ;;
	27)
	    echo "Out of memory. A memory allocation request failed."
	    ;;
	28)
	    echo "Operation timeout. The specified time-out period was reached according to the conditions."
	    ;;
	33)
	    echo "HTTP range error. The range "command" didn't work."
	    ;;
	34)
	    echo "HTTP post error. Internal post-request generation error."
	    ;;
	35)
	    echo "SSL connect error. The SSL handshaking failed."
	    ;;
	*)
	    echo "Error $status check curl manpage" >&2
	    ;;
    esac
    if [ $status -ne 0 ]; then
	exit $status
    fi
}


user=admin:admin
host=localhost
port=8080
manager=/manager/text/


while getopts "h:u:p:" opt; do
    case $opt in
	h)
	    host=$OPTARG
	    ;;
	u)
	    user=$OPTARG
	    ;;
	p)
	    port=$OPTARG
	    ;;
	*)
	    usage	    
    esac    
done

shift $(($OPTIND-1))


if [ $# -lt 1 ]; then
    usage
    exit 2
fi

cmd=$1
shift 1

url=http://$host:$port$manager

if [ $cmd != "list" -a $cmd != "serverinfo" -a $cmd != "resources" ]; then
    if [ $# -eq 0 ]; then
	die "Must give context path to webapp"
    fi
    path=$1
fi


case $cmd in
    list|serverinfo)
	doCurl $cmd
	;;
    resources)
	if [ $# -eq 1 ]; then
	    doCurl $cmd?$*
	else
	    doCurl $cmd
        fi
	;;
    status)
        status=$(doCurl list | grep "$path:" | awk -F: '{print $2}')
	echo $status
	if [ -z $status ]; then
	    exit 2
	fi
	if [ $status == "running" ]; then
	    exit 0
	fi
	exit 1

	;;
    start|stop|reload|undeploy)
	result=$(doCurl $cmd?path=$path)
	echo $result
	if [[ $result == OK* ]] ; then
	    exit 0;
	fi
	exit 1 
	;;

    deploy|redeploy)
	if [ $# -lt 2 ]; then
	    die "Must give path and file"
	fi
	path=$1
	file=$2
	if [ ! -r $file ]; then
	    die "Can't read $file"
	fi
	if [ $cmd = "redeploy" ]; then
	    redeploy="&update=true"
        fi
	doCurl deploy?path=$path$redeploy -T $file 
	;;
    *)
	die "Unsupported command: $cmd"
esac


    
    

