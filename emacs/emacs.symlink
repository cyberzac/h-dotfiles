(global-font-lock-mode t)
(windmove-default-keybindings)

(setq mac-option-modifier 'none)
(setq mac-command-modifier 'meta)

(setq use-file-dialog nil)

;; "y or n" instead of "yes or no"
(fset 'yes-or-no-p 'y-or-n-p)

;; Highlight regions and add special behaviors to regions.
;; "C-h d transient" for more info
(setq transient-mark-mode t)

;; Display line and column numbers
(setq line-number-mode t)
(setq column-number-mode t)
(setq default-tab-width 4)

(global-set-key "\C-c\C-w" 'backward-kill-word)

;; Remove unnecessary gui stuff
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
(if (fboundp 'tool-bar-mode) (tool-bar-mode -1))
(if (fboundp 'menu-bar-mode) (menu-bar-mode 1))

(blink-cursor-mode 0) ;; no blink

;;(set-background-color "black")
;;(set-face-background 'default "black")
;;(set-face-background 'region "black")
;;(set-face-foreground 'default "white")
;;(set-face-foreground 'region "gray60")
;;(set-foreground-color "white")
;;(set-cursor-color "red")
(load-theme 'tsdh-dark)

;;
;; Copy shell
;;

(when (memq window-system '(mac ns))
     (load "~/.emacs.d/exec-path-from-shell.el")
     (require 'exec-path-from-shell) ;; if not using the ELPA package
     (exec-path-from-shell-initialize))


;; zsh
(add-to-list 'auto-mode-alist '("\\.zsh\\'" . sh-mode))

;;
;; Spelling
;;
(setq-default ispell-program-name "aspell")

;;(let ((path "~/.emacs.d"))
;;(setq load-path (cons path load-path))

;;;;;;;;;;;;
;; Graphviz
;;;;;;;;;;;;
(load "~/.emacs.d/graphviz-dot-mode.el")

;;;;;;;;;;;;
;; SCALA
;;;;;;;;;;;

(let ((path "~/.emacs.d/scala"))
(setq load-path (cons path load-path))
(load "scala-mode-auto.el"))

(defun scala-turnoff-indent-tabs-mode ()
(setq indent-tabs-mode nil))

;; scala mode hooks
(add-hook 'scala-mode-hook 'scala-turnoff-indent-tabs-mode)

;; Maven bound to 
(add-hook 'scala-mode-hook
'(lambda ()
(define-key scala-mode-map '[f6] 'mvn)))

(load "~/.emacs.d/nxml-mode/rng-auto.el")
(setq auto-mode-alist 
      (cons '("\\.\\(xml\\|xsl\\|rng\\|xhtml\\)\\'" . nxml-mode)
	      auto-mode-alist))
;;(add-hook 'scala-mode-hook
;;	  '(lambda ()
;;	     (yas/minor-mode-on)))

;;
;; SBT
;;
(add-to-list 'load-path' "~/.emacs.d/sbt")

;;
;;
;; Homebrew
;;
(let ((default-directory "/usr/local/share/emacs/site-lisp/"))
  (normal-top-level-add-subdirs-to-load-path))

;;
;; Markdown
;;
(load "~/.emacs.d/markdown-mode.el")
;;(add-to-list 'load-path' "~/.emacs.d/markdown-mode.el")
;;(autoload 'markdown-mode "markdown-mode" "Major mode for editing Markdown files" t)
(add-to-list 'auto-mode-alist '("\\.text\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.markdown\\'" . markdown-mode))
(add-to-list 'auto-mode-alist '("\\.md\\'" . markdown-mode))


;;
;; Yaml
;;
;;
(load "~/.emacs.d/yaml-mode/yaml-mode.el")
;;(add-to-list 'load-path' "~/.emacs.d/yaml-mode")
(require 'yaml-mode)
(add-to-list 'auto-mode-alist '("\\.yml$" . yaml-mode))

;; Ensime
;;

;; Load the ensime lisp code...
;;(add-to-list 'load-path "~/.emacs.d/ensime/elisp/")
;;(require 'ensime)

;; This step causes the ensime-mode to be started whenever
;; scala-mode is started for a buffer. You may have to customize this step
;; if you're not using the standard scala mode.
(add-hook 'scala-mode-hook 'ensime-scala-mode-hook)

;; MINI HOWTO: 
;; Open .scala file. M-x ensime (once per project)
;;(require 'slime)
;;(slime-setup '(slime-repl))

;;
;; PUML
;;
;; Enable puml-mode for PlantUML files
(add-to-list 'auto-mode-alist
             '("\\.puml\\'" . puml-mode)
             '("\\.plantuml\\'" . puml-mode))



(when (>= emacs-major-version 24)
  (require 'package)
  (add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/") t)
  (package-initialize)
  )


(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(ansi-color-faces-vector
   [default default default italic underline success warning error])
 '(ansi-color-names-vector
   ["#2d3743" "#ff4242" "#74af68" "#dbdb95" "#34cae2" "#008b8b" "#00ede1" "#e1e1e0"])
 '(custom-enabled-themes (quote (tsdh-dark)))
 '(inferior-lisp-program "clj")
 '(package-selected-packages (quote (tickscript-mode slime-repl puml-mode clojure-mode)))
 '(puml-plantuml-jar-path "/Users/zac/.plantuml.jar"))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )


(put 'upcase-region 'disabled nil)
